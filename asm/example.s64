
//this is meant to be compiled from the top level of the project...
..include"asm/structure.h64"
..include"asm/structure.h64"
..include"asm/structure.h64"
..include"asm/structure.h64"
..include"asm/structure.h64"
..include"asm/structure.h64"
//this is how you do an include if you're compiling in the same directory as asm.
//..include"structure.h64"



im64 0, q%30000%
setstp 0
nop

//increment

${(): 
	$var u64 a;
	$var u64 zero;
	$var u8 char_mod;
	$var byte char_zero;
	$var byte char_newline;
	
	${
		$var u64 beyond_max_iter;
		$var u64[3] myarray;
		//initialize my variable to zero.
		im8 $zero, 0;
		st16 $zero, q%myVariable%;
		im8 $char_mod, 10;
		im8 $char_zero, '0';
		im8 $char_newline, '\n';

		//do an initial increment.
		ld16 $a, &%myVariable%;
		inc $a;
		st16 $a, &%myVariable%;
		im16 $beyond_max_iter, S%51%; asm_print; //using signed short, for a change!

$|

		[while]{
			ld16 $a, &%myVariable%;
			ucmp $+0!, $a, $beyond_max_iter;
			//for "not equals" we just do nothing...
			//explicit
			//bool $+0!;
		}{$+0!}{
			//modulo a and add the value '0'
			umod $a, $char_mod;
			iadd $a, $char_zero;
			//dwrite the result.
			dwrite $zero, $a;
			//write a newline.
			dwrite $zero, $char_newline;
			ld16 $a, &%myVariable%;
			inc $a;
			st16 $a, &%myVariable%;
			//do a function call!
			push64 $a;
			push64 $zero;
			push64 $char_mod;
			push64 $char_zero;
			push64 $char_newline;
			push64 $beyond_max_iter;
			call &%do_nothing_inefficiently%;
			pop64 $beyond_max_iter;
			pop64 $char_newline;
			pop64 $char_zero;
			pop64 $char_mod;
			pop64 $zero;
			pop64 $a;
		}
$|

	$}
	example_die:
	hlt;

$}
myVariable:
	shorts 0

$gvar short* myGlobal; asm_print;
//testing $ syntax...
add2_u64:
${(int a, int b) -> u64   :

	$var qword return_value;

	mov $return_value, $a;
	iadd $return_value, $b; asm_print;
	$return $return_value; asm_print;
	
$}

add2_u64_2:
${(int* a, int b) -> u64:

	iadd $a, $b;
	$return $a; asm_print;
$}


do_nothing_inefficiently:
${():
	$var u64[300] bigarr;
	$return; asm_print;
	hlt;
$}

..asciz:Hello World!

..include"asm/strlen.h64"
