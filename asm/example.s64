
//this is meant to be compiled from the top level of the project...
..include"asm/structure.h64"
//this is how you do an include if you're compiling in the same directory as asm.
//..include"structure.h64"



im64 0, q%30000%
setstp 0
nop

//increment

${(): u64 a; 			\//holds value of myvariable, usually
	u64 zero;			\//
	byte char_mod;		\//
	byte char_zero;		\//holds zero.
	byte char_newline;\//holds newline character.

	
//initialize my variable to zero.
im8 $zero, 0;
st16 $zero, q%myVariable%;
im8 $char_mod, 10;
im8 $char_zero, '0';
im8 $char_newline, '\n';

//do an initial increment.
ld16 $a, &%myVariable%;
inc $a;
st16 $a, &%myVariable%;

$|

[while]{
	ld16 $a, &%myVariable%;
	ucmp $+0!, $a, $zero;
}{$+0!}{
	//modulo a and add the value '0'
	umod $a, $char_mod;
	iadd $a, $char_zero;
	//dwrite the result.
	dwrite $zero, $a;
	//write a newline.
	dwrite $zero, $char_newline;
	ld16 $a, &%myVariable%;
	inc $a;
	st16 $a, &%myVariable%;
}
$|


example_die:
hlt;

$}

myVariable:
	shorts 0


//testing $ syntax...
add2_u64:
${(int a, int b) -> u64   : \
		qword return_value;

	mov $return_value, $a;
	iadd $return_value, $b; asm_print;
	$return $return_value; asm_print;
	
$}

add2_u64_2:
${(int* a, int b) -> u64:

	iadd $a, $b;
	$return $a; asm_print;
$}

..asciz:Hello World!


